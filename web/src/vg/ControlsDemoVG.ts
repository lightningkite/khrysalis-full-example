// File: /home/jivie/Projects/khrysalis-full-example/android/src/main/java/com/lightningkite/rxexample/vg/ControlsDemoVG.kt
// Package: com.lightningkite.rxexample.vg
// Generated by Khrysalis - this file will be overwritten.
import { ViewGenerator, bind, intToString, showInInput, showInSelect, subscribeAutoDispose } from 'rxjs-plus'
import { BehaviorSubject } from 'rxjs'
import { ControlsDemoBinding } from '../resources/layouts/ControlsDemoBinding'

//! Declares com.lightningkite.rxexample.vg.ControlsDemoVG
export class ControlsDemoVG implements ViewGenerator {
    public static implementsViewGenerator = true;
    public constructor() {
        this.text = new BehaviorSubject("");
        this.options = new BehaviorSubject(["Apple", "Banana", "Chili Pepper", "Dragon Fruit"]);
        this._number = new BehaviorSubject(32);
    }
    
    //! Declares com.lightningkite.rxexample.vg.ControlsDemoVG.titleString
    public get titleString(): string { return "Controls Demo"; }
    
    
    public readonly text: BehaviorSubject<string>;
    public readonly options: BehaviorSubject<Array<string>>;
    public readonly _number: BehaviorSubject<number>;
    
    public generate(dependency: Window): HTMLElement {
        const xml = ControlsDemoBinding.inflate();
        const view = xml.root;
        
        this._number.pipe(intToString).pipe(bind(xml.numberText, "value", "input"));
        this.text.pipe(bind(xml.editableText, "value", "input")).pipe(bind(xml.editableAutoText, "value", "input")).pipe(bind(xml.editableTextBig, "value", "input")).pipe(subscribeAutoDispose(xml.editableTextCopy, "textContent"));
        this.options.pipe(showInInput(xml.editableAutoText, this.text, undefined)).pipe(showInSelect(xml.spinner, this.text));
        
        return view;
    }
}
