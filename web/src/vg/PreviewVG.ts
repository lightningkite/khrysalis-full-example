// Package: com.lightningkite.rxexample.vg
// Generated by Khrysalis - this file will be overwritten.
import { ControlsDemoBinding } from '../resources/layouts/ControlsDemoBinding'
import { ExampleContentBinding } from '../resources/layouts/ExampleContentBinding'
import { LoginDemoBinding } from '../resources/layouts/LoginDemoBinding'
import { MainBinding } from '../resources/layouts/MainBinding'
import { PreviewBinding } from '../resources/layouts/PreviewBinding'
import { SelectDemoBinding } from '../resources/layouts/SelectDemoBinding'
import { SliderDemoBinding } from '../resources/layouts/SliderDemoBinding'
import { ViewPagerDemoBinding } from '../resources/layouts/ViewPagerDemoBinding'
import { ViewGenerator, elementRemoved, showInPager } from '@lightningkite/rxjs-plus'
import { BehaviorSubject, of } from 'rxjs'

//! Declares com.lightningkite.rxexample.vg.PreviewVG
export class PreviewVG implements ViewGenerator {
    public static implementsViewGenerator = true;
    public constructor() {
        this.previews = [new PreviewVG.XmlPreview("ControlsDemoBinding", (it: Window): HTMLElement => ControlsDemoBinding.inflate().root), new PreviewVG.XmlPreview("ExampleContentBinding", (it: Window): HTMLElement => ExampleContentBinding.inflate().root), new PreviewVG.XmlPreview("LoginDemoBinding", (it: Window): HTMLElement => LoginDemoBinding.inflate().root), new PreviewVG.XmlPreview("MainBinding", (it: Window): HTMLElement => MainBinding.inflate().root), new PreviewVG.XmlPreview("SelectDemoBinding", (it: Window): HTMLElement => SelectDemoBinding.inflate().root), new PreviewVG.XmlPreview("SliderDemoBinding", (it: Window): HTMLElement => SliderDemoBinding.inflate().root), new PreviewVG.XmlPreview("ViewPagerDemoBinding", (it: Window): HTMLElement => ViewPagerDemoBinding.inflate().root)];
        this.previewIndex = new BehaviorSubject(0);
    }
    
    //! Declares com.lightningkite.rxexample.vg.PreviewVG.titleString
    public get titleString(): string { return "Preview"; }
    
    
    
    
    public readonly previews: Array<PreviewVG.XmlPreview>;
    
    public readonly previewIndex: BehaviorSubject<number>;
    
    public generate(dependency: Window): HTMLElement {
        const xml = PreviewBinding.inflate();
        const view = xml.root;
        of(this.previews).pipe(showInPager(xml.pager, this.previewIndex, (it: PreviewVG.XmlPreview): HTMLElement => it.make(dependency)));
        elementRemoved(view).parts.push(this.previewIndex.subscribe((it: number): void => {
            xml.viewName.textContent = this.previews[it].name;
        }, undefined, undefined));
        return view;
    }
    
}
export namespace PreviewVG {
    //! Declares com.lightningkite.rxexample.vg.PreviewVG.XmlPreview
    export class XmlPreview {
        public constructor(public readonly name: string, public readonly make: ((a: Window) => HTMLElement)) {
        }
    }
}
