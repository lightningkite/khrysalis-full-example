// Package: com.lightningkite.rxexample.vg
// Generated by Khrysalis - this file will be overwritten.
import KhrysalisRuntime
import RxSwift
import UIKit
import RxSwiftPlus
import Foundation

public class PreviewVG : ViewGenerator {
    public init() {
        self.previews = [XmlPreview(name: "ControlsDemoBinding", make: { (it) -> UIView in ControlsDemoBinding().root }), XmlPreview(name: "ExampleContentBinding", make: { (it) -> UIView in ExampleContentBinding().root }), XmlPreview(name: "LoginDemoBinding", make: { (it) -> UIView in LoginDemoBinding().root }), XmlPreview(name: "MainBinding", make: { (it) -> UIView in MainBinding().root }), XmlPreview(name: "SelectDemoBinding", make: { (it) -> UIView in SelectDemoBinding().root }), XmlPreview(name: "SliderDemoBinding", make: { (it) -> UIView in SliderDemoBinding().root }), XmlPreview(name: "ViewPagerDemoBinding", make: { (it) -> UIView in ViewPagerDemoBinding().root })]
        self.previewIndex = ValueSubject(0)
        //Necessary properties should be initialized now
    }
    
    public var titleString: String {
        get { return "Preview" }
    }
    
    public class XmlPreview {
        public var name: String
        public var make: (ViewControllerAccess) -> UIView
        public init(name: String, make: @escaping (ViewControllerAccess) -> UIView) {
            self.name = name
            self.make = make
            //Necessary properties should be initialized now
        }
    }
    
    public let previews: Array<XmlPreview>
    
    public let previewIndex: ValueSubject<Int>
    
    public func generate(dependency: ViewControllerAccess) -> UIView {
        let xml = PreviewBinding()
        let view = xml.root
        self.previews.showIn(xml.pager, showIndex: self.previewIndex) { (it) -> UIView in it.make(dependency) }
        self.previewIndex.subscribe(onNext: { (it) -> Void in xml.viewName.text = self.previews[it].name }).disposed(by: view.removed)
        return view
    }
    
}

