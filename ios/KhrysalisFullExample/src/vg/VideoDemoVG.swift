// File: /home/jivie/Projects/khrysalis-full-example/android/src/main/java/com/lightningkite/rxexample/vg/VideoDemoVG.kt
// Package: com.lightningkite.rxexample.vg
// Generated by Khrysalis - this file will be overwritten.
import KhrysalisRuntime
import RxSwift
import UIKit
import RxSwiftPlus
import Foundation

public class VideoDemoVG : ViewGenerator {
    public init() {
        self.currentVideo = (ValueSubject(VideoRemoteUrl(URL(string: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4")!) as Video?) as ValueSubject<Video?>)
        self.timesPlayPressed = (ValueSubject(0 as Int) as ValueSubject<Int>)
        //Necessary properties should be initialized now
    }
    
    
    
    public var titleString: String {
        get { return "Video Demo" }
    }
    
    public let currentVideo: ValueSubject<Video?>
    public let timesPlayPressed: ValueSubject<Int>
    
    public func generate(dependency: ViewControllerAccess) -> UIView {
        let xml = VideoDemoBinding()
        let view = xml.root
        
        //--- Set Up xml.video
        self.currentVideo.subscribeAutoDispose(xml.video, { (this, it) -> Void in xml.video.setVideo(it) })
        
        //--- Set Up xml.play (overwritten on flow generation)
        xml.play.onClick { () -> Void in self.playClick() }
        
        //--- Set Up xml.gallery
        xml.gallery.onClick { () -> Void in dependency.requestVideoGallery().subscribe(onSuccess: { (it) -> Void in self.currentVideo.value = VideoLocalUrl(it) }) }
        
        //--- Set Up xml.camera
        xml.camera.onClick { () -> Void in dependency.requestVideoCamera().subscribe(onSuccess: { (it) -> Void in self.currentVideo.value = VideoLocalUrl(it) }) }
        
        //--- Set Up xml.galleryMulti
        xml.galleryMulti.onClick { () -> Void in dependency.requestVideosGallery().subscribe(onSuccess: { (it) -> Void in if let it = (it.firstOrNull()) {
            self.currentVideo.value = VideoLocalUrl(it)
        } }) }
        
        //--- Generate End (overwritten on flow generation)
        
        return view
    }
    
    //--- Init
    
    
    
    //--- Actions
    
    public func playClick() -> Void {
        self.timesPlayPressed.value += 1
        switch self.timesPlayPressed.value % 3 {
            case 0:
            self.currentVideo.value = VideoRemoteUrl(URL(string: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4")!)
            break
            case 1:
            self.currentVideo.value = VideoRemoteUrl(URL(string: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4")!)
            break
            case 2:
            self.currentVideo.value = nil
            break
            default: break
        }
        
    }
    
    //--- Action galleryClick
    
    public func cameraClick() -> Void {
    }
    
    public func galleryMultiClick() -> Void {
    }
    
    //--- Body End
}

