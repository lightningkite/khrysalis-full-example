// Package: com.lightningkite.rxexample.vg
// Generated by Khrysalis - this file will be overwritten.
import KhrysalisRuntime
import RxSwift
import UIKit
import RxSwiftPlus
import Foundation

public class SelectDemoVG : ViewGenerator {
    public var stack: ValueSubject<Array<ViewGenerator>>
    public init(stack: ValueSubject<Array<ViewGenerator>>) {
        self.stack = stack
        self.options = [BasicExampleVG(), VideoDemoVG(), WebsocketDemoVG(), HttpDemoVG(), ExternalTestVG(), DateButtonDemoVG(), LocationDemoVG(), LoginDemoVG(stack: stack), LoadImageDemoVG(), ControlsDemoVG(), ExampleContentVG(), ViewPagerDemoVG(stack: stack), SliderDemoVG(), PreviewVG()]
        //Necessary properties should be initialized now
    }
    
    public var titleString: String {
        get { return "Select Demo" }
    }
    
    public let options: Array<ViewGenerator>
    
    public func selectVG(_ viewGenerator: ViewGenerator) -> Void {
        self.stack.push(viewGenerator)
    }
    
    public func generate(dependency: ViewControllerAccess) -> UIView {
        let xml = SelectDemoBinding()
        let view = xml.root
        
        self.options.first!
        Observable.just(self.options).showIn(xml.list) { (obs: Observable<ViewGenerator>) -> UIView in
            let xml = ComponentTestBinding()
            let view = xml.root
            obs.subscribeAutoDispose(xml.label, { (this, it) -> Void in this.text = it.titleString })
            xml.button.rx.click
                .flatMap { (it) -> Observable<ViewGenerator> in obs.take(1) }
                .subscribeAutoDispose(view, { (this, it) -> Void in self.selectVG(it) })
            return view
        }
        
        return view
    }
}

